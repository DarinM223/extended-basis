(* Copyright (C) 2006-2007 SSH Communications Security, Helsinki, Finland
 *
 * This code is released under the MLton license, a BSD-style license.
 * See the LICENSE file or http://mlton.org/License for details.
 *)

lib ["detail/ml/${SML_COMPILER}/workarounds.use",
     "detail/ml/common/basis.sml",
     "detail/ml/${SML_COMPILER}/basis.sml",
     "detail/bootstrap.sml",
     "detail/ml/${SML_COMPILER}/extensions.use",
     "public/typing/phantom.sig",
     "detail/typing/phantom.sml",
     "public/typing/static-sum.sig",
     "detail/typing/static-sum.sml",
     "public/concept/bitwise.sig",
     "public/concept/bounded.sig",
     "public/concept/cased.sig",
     "public/concept/cstringable.sig",
     "public/concept/empty.sig",
     "public/concept/equality.sig",
     "public/concept/etaexp.sig",
     "public/concept/flags.sig",
     "public/concept/func.sig",
     "public/concept/intable.sig",
     "public/concept/largeable.sig",
     "public/concept/monad.sig",
     "public/concept/ordered.sig",
     "public/concept/scannable.sig",
     "public/concept/shiftable.sig",
     "public/concept/signed.sig",
     "public/concept/stringable.sig",
     "public/concept/t.sig",
     "public/concept/wordable.sig",
     "public/concept/formattable.sig",
     "detail/concept/mk-bounded.fun",
     "detail/concept/mk-equality.fun",
     "detail/concept/mk-scannable.fun",
     "detail/concept/mk-stringable.fun",
     "detail/concept/mk-cstringable.fun",
     "public/typing/void.sig",
     "public/fn/fn.sig",
     "detail/fn/fn.sml",
     "public/fn/cps.sig",
     "detail/fn/cps.sml",
     "public/basic.sig",
     "detail/basic.sml",
     "public/data/id.sig",
     "public/data/unit.sig",
     "public/data/sq.sig",
     "detail/data/sq.sml",
     "public/fn/bin-fn.sig",
     "detail/fn/bin-fn.sml",
     "public/fn/un-op.sig",
     "detail/fn/un-op.sml",
     "public/fn/thunk.sig",
     "detail/fn/thunk.sml",
     "public/data/univ.sig",
     "detail/data/univ-ref.sml",
     "detail/data/univ-exn.sml",
     "detail/ml/${SML_COMPILER}/univ.sml",
     "public/fn/bin-op.sig",
     "detail/fn/bin-op.sml",
     "public/fn/effect.sig",
     "detail/fn/effect.sml",
     "public/generic/fix.sig",
     "detail/generic/fix.sml",
     "public/fn/un-pr.sig",
     "detail/fn/un-pr.sml",
     "public/data/order.sig",
     "detail/data/order.sml",
     "public/fn/bin-pr.sig",
     "detail/fn/bin-pr.sml",
     "public/fn/cmp.sig",
     "detail/fn/cmp.sml",
     "detail/concept/mk-ordered.fun",
     "public/data/ref.sig",
     "detail/data/ref.sml",
     "public/data/bool.sig",
     "detail/data/bool.sml",
     "public/data/product-type.sig",
     "public/data/pair.sig",
     "detail/data/pair.sml",
     "public/data/product.sig",
     "detail/data/product.sml",
     "detail/concept/mk-monad.fun",
     "public/control/with.sig",
     "detail/control/with.sml",
     "public/data/sum.sig",
     "detail/data/sum.sml",
     "public/control/exn.sig",
     "detail/control/exn.sml",
     "public/debug/contract.sig",
     "detail/debug/contract.sml",
     "public/generic/emb.sig",
     "detail/generic/emb.sml",
     "public/generic/iso.sig",
     "detail/generic/iso.sml",
     "public/fold/fold.sig",
     "detail/fold/fold.sml",
     "public/fold/fru.sig",
     "detail/fold/fru.sml",
     "public/generic/tie.sig",
     "detail/generic/tie.sml",
     "public/sequence/array.sig",
     "public/sequence/array-slice.sig",
     "public/sequence/vector.sig",
     "public/sequence/vector-slice.sig",
     "detail/sequence/mk-seq-common-ext.fun",
     "detail/sequence/array.sml",
     "detail/sequence/array-slice.sml",
     "detail/sequence/vector.sml",
     "detail/sequence/vector-slice.sml",
     "public/data/option.sig",
     "detail/data/option.sml",
     "public/numeric/integer.sig",
     "public/numeric/int-inf.sig",
     "public/numeric/real.sig",
     "public/numeric/word.sig",
     "detail/numeric/mk-integer-ext.fun",
     "detail/numeric/mk-int-inf-ext.fun",
     "detail/numeric/mk-real-ext.fun",
     "detail/numeric/mk-word-ext.fun",
     "detail/ml/common/scalars.sml",
     "detail/ml/${SML_COMPILER}/ints.sml",
     "detail/ml/${SML_COMPILER}/reals.sml",
     "detail/ml/${SML_COMPILER}/words.sml",
     "public/sequence/list.sig",
     "detail/sequence/list.sml",
     "public/sequence/buffer.sig",
     "detail/sequence/mk-buffer-common.fun",
     "detail/sequence/buffer.sml",
     "public/sequence/resizable-array.sig",
     "detail/sequence/resizable-array.sml",
     "public/io/reader.sig",
     "detail/io/reader.sml",
     "public/io/writer.sig",
     "detail/io/writer.sml",
     "public/io/ios-monad.sig",
     "detail/io/ios-monad.sml",
     "public/control/exit.sig",
     "detail/control/exit.sml",
     "public/sequence/mono-vector.sig",
     "public/sequence/mono-vector-slice.sig",
     "public/sequence/mono-array.sig",
     "public/sequence/mono-array-slice.sig",
     "public/text/char.sig",
     "public/text/string.sig",
     "public/text/substring.sig",
     "public/text/text.sig",
     "detail/sequence/mk-mono-seq-common-ext.fun",
     "detail/sequence/mk-mono-vector-ext.fun",
     "detail/sequence/mk-mono-vector-slice-ext.fun",
     "detail/sequence/mk-mono-array-ext.fun",
     "detail/sequence/mk-mono-array-slice-ext.fun",
     "detail/text/mk-text-ext.fun",
     "detail/ml/common/mono-seqs.sml",
     "detail/ml/${SML_COMPILER}/mono-vectors.sml",
     "detail/ml/${SML_COMPILER}/mono-vector-slices.sml",
     "detail/ml/${SML_COMPILER}/mono-arrays.sml",
     "detail/ml/${SML_COMPILER}/mono-array-slices.sml",
     "detail/ml/${SML_COMPILER}/texts.sml",
     "public/sequence/stream.sig",
     "detail/sequence/stream.sml",
     "public/control/iter.sig",
     "detail/control/iter.sml",
     "public/lazy/lazy.sig",
     "detail/lazy/lazy.sml",
     "public/fn/shift-op.sig",
     "public/io/text-io.sig",
     "detail/io/text-io.sml",
     "public/os/os-file-sys.sig",
     "public/os/os.sig",
     "detail/os/os.sml",
     "detail/concept/mk-word-flags.fun",
     "public/time/time.sig",
     "detail/time/time.sml",
     "public/text/cvt.sig",
     "detail/text/cvt.sml",
     "public/export/${SML_COMPILER}.sml",
     "public/export/common.sml",
     "public/export/top-level.sml",
     "public/export/infixes.sml",
     "public/export/open-top-level.sml"] ;
